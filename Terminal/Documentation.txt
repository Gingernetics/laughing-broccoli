/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\
Terminal Documentation

This project is designed to emmulate terminal capabilities within a Java environment

/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\

To use project:
    Compile Main.java and run.
    Use classpaths to access files outside of current directory

Supported bash commands:
    echo
    mkdir
    pwd
    cat 
    ls 
    rm 
    java/javac (*Any language program should be supported)

Supported custom commands

    
    
Abstract Data Type: Queue
    **Will be** Used to implement a history command specific to input through 
this java terminal, rather than the bash terminal history

Abstract Data Type: Stack
    **Will be** Used to implement a cd system, with directories represented by elements of the stack

/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\

To do:
    help
    history
    clear

    *Maybe an alias system?
    *cd?

Limitations:
    Files must be in current working directory (cd is not available)
    High-level procedures such as nano cause the terminal to crash


Obstacles Overcome:
    Fails to bring up appropriate error message
        -Missing Operands, or too many arguments, 
        -Removing a non-empty directory without using -r argument
    Output is presented in one line


Side Effects:
    Commands will not appear when history is run in bash terminal
    
/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\

Recognition:
    First example with JScrollPane
	    MadProgrammer (Stackoverflow)

    First examples with JFrame, JPanel
	    843789 (Java Oracle)
	    Konstantina Dimtsa (javacodegeeks)

    Design system for JFrames
    	    Heisenbug (Stackoverflow)
            syb0rg (Stackoverflow)

    System for reading output of bash commands
            ap0 (Stackoverflow)
        
    First introduction to ErrorStream
            StarPinkER (Stackoverflow)

/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\*/~\
